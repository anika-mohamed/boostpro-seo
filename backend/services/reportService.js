const PDFDocument = require("pdfkit")

exports.generatePDFReport = async (reportData) => {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument({ margin: 50 })
      const buffers = []

      doc.on("data", buffers.push.bind(buffers))
      doc.on("end", () => {
        const pdfData = Buffer.concat(buffers)
        resolve(pdfData)
      })

      // Header
      doc.fontSize(24).text("SEO BoostPro - Comprehensive Report", { align: "center" })
      doc.moveDown()

      // User info
      doc.fontSize(14).text(`Generated for: ${reportData.user.name}`)
      doc.text(`Email: ${reportData.user.email}`)
      doc.text(`Generated on: ${reportData.generatedAt.toLocaleDateString()}`)
      doc.moveDown()

      // Executive Summary
      doc.fontSize(18).text("Executive Summary", { underline: true })
      doc.moveDown(0.5)
      doc.fontSize(12)
      doc.text(`Total Audits: ${reportData.summary.totalAudits}`)
      doc.text(`Average SEO Score: ${reportData.summary.avgScore}/100`)
      doc.moveDown()

      // Issues Breakdown
      doc.fontSize(16).text("Issues Breakdown", { underline: true })
      doc.moveDown(0.5)
      doc.fontSize(12)
      doc.text(`Critical Issues: ${reportData.summary.issuesByCategory.critical}`)
      doc.text(`Warnings: ${reportData.summary.issuesByCategory.warning}`)
      doc.text(`Info Items: ${reportData.summary.issuesByCategory.info}`)
      doc.moveDown()

      // Top Issues
      doc.fontSize(16).text("Top Issues Found", { underline: true })
      doc.moveDown(0.5)
      doc.fontSize(12)
      reportData.summary.topIssues.forEach((issue, index) => {
        doc.text(`${index + 1}. ${issue}`)
      })
      doc.moveDown()

      // Recommendations
      doc.fontSize(16).text("Key Recommendations", { underline: true })
      doc.moveDown(0.5)
      doc.fontSize(12)
      reportData.summary.recommendations.forEach((rec, index) => {
        doc.text(`${index + 1}. ${rec}`)
      })
      doc.moveDown()

      // Detailed Results
      doc.addPage()
      doc.fontSize(18).text("Detailed Audit Results", { underline: true })
      doc.moveDown()

      reportData.audits.forEach((audit, index) => {
        doc.fontSize(14).text(`${index + 1}. ${audit.url}`, { underline: true })
        doc.moveDown(0.5)
        doc.fontSize(12)
        doc.text(`Overall Score: ${audit.overallScore || "N/A"}/100`)
        doc.text(`Desktop Performance: ${audit.pageSpeedData?.desktop?.score || "N/A"}/100`)
        doc.text(`Mobile Performance: ${audit.pageSpeedData?.mobile?.score || "N/A"}/100`)
        doc.text(`Audit Date: ${audit.createdAt.toLocaleDateString()}`)
        doc.moveDown()

        if (audit.seoIssues && audit.seoIssues.length > 0) {
          doc.text("Key Issues:")
          audit.seoIssues.slice(0, 3).forEach((issue) => {
            doc.text(`â€¢ ${issue.title}: ${issue.description}`)
          })
        }
        doc.moveDown()
      })

      // Footer
      doc.fontSize(10).text("Generated by SEO BoostPro - Your SEO Analysis Platform", {
        align: "center",
      })

      doc.end()
    } catch (error) {
      reject(error)
    }
  })
}
